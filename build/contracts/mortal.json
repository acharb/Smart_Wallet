{
  "contractName": "mortal",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/mortal.sol\":\"mortal\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/mortal.sol\":{\"keccak256\":\"0xde73ecf5302d7b0b1b0f2351c9506164ad3ca9d178f48da8c247542e48eb2522\",\"urls\":[\"bzz-raw://e4829ab73f939bd9d3520a5edbb568a3b7240834996967877dac281d914e6a6d\",\"dweb:/ipfs/QmbTwnXNacboWwYQdZqWDa6FhLAT8Tr5i1RzRfq9MjD3H1\"]},\"/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/owned.sol\":{\"keccak256\":\"0x18a04e40d8e787df9fd7b864d443aa65e31820912838745080e6b54f07793545\",\"urls\":[\"bzz-raw://98ff3f8115d716bcee6d532578829175feb572ad3e0bb5f1b12b94dcbb8b54ec\",\"dweb:/ipfs/Qmb8kXr61z9Sj6RnB1yRErTV72Ps95FpddPPbVotQuiwy5\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060fa806100526000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806341c0e1b514602d575b600080fd5b60336035565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141560c3576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b56fea265627a7a7231582015c29f7786ef0db25532b20e6130588c4236b36941d4e51c3e41dbfcfa21075264736f6c634300050c0032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806341c0e1b514602d575b600080fd5b60336035565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141560c3576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b56fea265627a7a7231582015c29f7786ef0db25532b20e6130588c4236b36941d4e51c3e41dbfcfa21075264736f6c634300050c0032",
  "sourceMap": "48:125:2:-;;;441:10:3;433:5;;:18;;;;;;;;;;;;;;;;;;48:125:2;;;;;;",
  "deployedSourceMap": "48:125:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:125:2;;;;;;;;;;;;;;;;;;;79:92;;;:::i;:::-;;;130:5;;;;;;;;;;;116:19;;:10;:19;;;112:52;;;158:5;;;;;;;;;;;145:19;;;112:52;79:92::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./owned.sol\";\n\ncontract mortal is owned {\n    function kill() public {\n        if (msg.sender == owner)\n        selfdestruct(owner);\n    }\n}",
  "sourcePath": "/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/mortal.sol",
  "ast": {
    "absolutePath": "/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/mortal.sol",
    "exportedSymbols": {
      "mortal": [
        230
      ]
    },
    "id": 231,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 213,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/owned.sol",
        "file": "./owned.sol",
        "id": 214,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 257,
        "src": "25:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 215,
              "name": "owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 256,
              "src": "67:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_owned_$256",
                "typeString": "contract owned"
              }
            },
            "id": 216,
            "nodeType": "InheritanceSpecifier",
            "src": "67:5:2"
          }
        ],
        "contractDependencies": [
          256
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 230,
        "linearizedBaseContracts": [
          230,
          256
        ],
        "name": "mortal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "102:69:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "116:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "116:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "130:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "116:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 227,
                  "nodeType": "IfStatement",
                  "src": "112:52:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "158:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 223,
                        "name": "selfdestruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "145:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                          "typeString": "function (address payable)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "145:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 226,
                    "nodeType": "ExpressionStatement",
                    "src": "145:19:2"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "92:2:2"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "102:0:2"
            },
            "scope": 230,
            "src": "79:92:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 231,
        "src": "48:125:2"
      }
    ],
    "src": "0:173:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/mortal.sol",
    "exportedSymbols": {
      "mortal": [
        230
      ]
    },
    "id": 231,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 213,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/aleccharbonneau/Desktop/BlockChain/sol_wallet/contracts/owned.sol",
        "file": "./owned.sol",
        "id": 214,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 257,
        "src": "25:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 215,
              "name": "owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 256,
              "src": "67:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_owned_$256",
                "typeString": "contract owned"
              }
            },
            "id": 216,
            "nodeType": "InheritanceSpecifier",
            "src": "67:5:2"
          }
        ],
        "contractDependencies": [
          256
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 230,
        "linearizedBaseContracts": [
          230,
          256
        ],
        "name": "mortal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "102:69:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "116:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "116:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "130:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "116:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 227,
                  "nodeType": "IfStatement",
                  "src": "112:52:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "158:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 223,
                        "name": "selfdestruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "145:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                          "typeString": "function (address payable)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "145:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 226,
                    "nodeType": "ExpressionStatement",
                    "src": "145:19:2"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "92:2:2"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "102:0:2"
            },
            "scope": 230,
            "src": "79:92:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 231,
        "src": "48:125:2"
      }
    ],
    "src": "0:173:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-16T00:13:03.099Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}